name: "Build & Release"

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on tags like v1.0.6

jobs:
  # Android Build Job
  android-build:
    name: Build & Release Android
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Setup Java (required for Android builds)
      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'

      # 3. Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'
          channel: 'stable'

      # 4. Install dependencies
      - name: Install Dependencies
        run: flutter pub get

      # 5. Build Debug APK
      - name: Build Debug APK
        run: flutter build apk --debug --no-tree-shake-icons

      # 6. Build Release APK
      - name: Build Release APK
        run: flutter build apk --release --no-tree-shake-icons

      # 7. Build AAB
      - name: Build App Bundle
        run: flutter build appbundle --no-tree-shake-icons

      # 8. Upload Debug APK
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: build/app/outputs/flutter-apk/app-debug.apk
          
      # 9. Upload Release APK
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

      # 10. Upload AAB
      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release.aab
          path: build/app/outputs/bundle/release/app-release.aab

 # iOS Build Job
  ios-build:
    name: Build & Release iOS
    runs-on: macos-latest
  
    steps:
      # 1. Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4
  
      # 2. Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'
          channel: 'stable'
  
      # 3. Install dependencies
      - name: Install Dependencies
        run: flutter pub get
  
      # 4. Build IPA (no code-signing for testing purposes)
      - name: Build IPA
        run: flutter build ipa --no-codesign
  
      # 5. List iOS Build Directory (to confirm correct paths)
      - name: List iOS Build Directory
        run: ls -R build/ios
  
      # 6. Upload IPA artifact (correct path based on file location)
      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: iOS-IPA
          path: build/ios/Runner.xcarchive/Products/Applications/Runner.ipa  # Update this path based on the output
  
      # 7. Upload iOS Build Archive
      - name: Upload iOS Build Archive
        uses: actions/upload-artifact@v4
        with:
          name: iOS-Build-Tar
          path: build/ios_build.tar.gz
  

  # Create Release Job
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [android-build, ios-build]

    steps:
      # 1. Download Android Artifacts
      - name: Download Debug APK
        uses: actions/download-artifact@v4
        with:
          name: app-debug.apk

      - name: Download Release APK
        uses: actions/download-artifact@v4
        with:
          name: app-release.apk

      - name: Download AAB
        uses: actions/download-artifact@v4
        with:
          name: app-release.aab

      # 2. Download iOS Artifacts
      - name: Download IPA Artifact
        uses: actions/download-artifact@v4
        with:
          name: iOS-IPA

      - name: Download iOS Build Archive
        uses: actions/download-artifact@v4
        with:
          name: iOS-Build-Tar

      # 3. Create GitHub Release
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          artifacts: |
            app-debug.apk
            app-release.apk
            app-release.aab
            Runner.ipa
            ios_build.tar.gz
          token: ${{ secrets.HELLO }}
          generateReleaseNotes: false
          makeLatest: legacy
