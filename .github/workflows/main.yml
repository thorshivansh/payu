name: "Build & Release"

on:
  push:
    tags:
      - 'v*.*.*' # Runs on version tags (e.g., v1.0.6)
  # pull_request:
  #   branches:
  #     - main
  #     - shivanshu_dev
  # push:
  #   branches:
  #     - shivanshu_dev
  #     - shivanshu_prod

jobs:
  build:
    name: Build & Release
    runs-on: macos-latest

    steps:
      # 1. Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4  # Updated to v4

      # 2. Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'

      # 3. Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'
          channel: 'stable'

      # 4. Install dependencies
      - name: Install Dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze
        continue-on-error: true  # Ignore failures in the analyze step
      # 5. Run tests
      - name: Test Flutter App
        run: flutter test
        continue-on-error: true  # Ignore failures in the analyze step


      # 6. Build APK
      - name: Build APK
        run: flutter build apk --release --no-tree-shake-icons

      # 7. Build AAB
      - name: Build appBundle
        run: flutter build appbundle --no-tree-shake-icons

      # 8. Build IPA
      - name: Build IPA
        run: flutter build ipa --no-codesign

      # 9. Compress iOS build into a .tar.gz archive
      - name: Compress iOS Build
        run: |
          cd build
          tar -czf ios_build.tar.gz ios

      # 10. Upload APK, AAB, and iOS build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
            build/ios_build.tar.gz

      # 11. Create GitHub Release with the uploaded artifacts
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk,build/app/outputs/bundle/release/app-release.aab,build/ios_build.tar.gz"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.HELLO }} 
        
